/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>

/ {
    combos {
        compatible = "zmk,combos";

        combo_bloq_may {
            bindings = <&caps_word>;
            key-positions = <15 20>;
            layers = <0>;
        };
    };

    macros {
        php_arrow: php_arrow {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp MINUS &kp GT>;
            label = "PHP_ARROW";
        };

        php_equalize: php_equalize {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp EQUAL &kp GT>;
            label = "PHP_EQUALIZE";
        };

        n_tilde: n_tilde {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LA(N) &kp N>;
            label = "N_TILDE";
        };

        mac_adcent: mac_adcent_a {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&kp LA(E) &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "MAC_ADCENT_A";
        };
    };

    behaviors {
        hml: hml {
            compatible = "zmk,behavior-hold-tap";
            label = "HML";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            flavor = "tap-preferred";
            hold-trigger-on-release;
        };

        hmr: hmr {
            compatible = "zmk,behavior-hold-tap";
            label = "HMR";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            flavor = "tap-preferred";
            hold-trigger-on-release;
        };

        key_lt: key_lt {
            compatible = "zmk,behavior-hold-tap";
            label = "KEY_LT";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            flavor = "tap-preferred";
            require-prior-idle-ms = <150>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp TAB      &kp Q        &lt 4 W      &kp E              &kp R         &kp T              &kp Y            &kp U            &kp I             &lt 4 O      &kp P                     &kp BACKSPACE
&kp ESCAPE   &hml LALT A  &hml LGUI S  &hml LEFT_SHIFT D  &hml LCTRL F  &kp G              &kp H            &hmr RCTRL J     &hmr RSHIFT K     &hmr LGUI L  &hmr RIGHT_ALT SEMICOLON  &sl 6
&lt 5 GLOBE  &kp Z        &kp X        &kp C              &kp V         &kp B              &kp N            &kp M            &kp COMMA         &kp DOT      &kp FSLH                  &kp ENTER
                                       &key_lt 2 TAB      &lt 1 ESC     &key_lt 2 ENTER    &key_lt 2 SPACE  &lt 3 BACKSPACE  &key_lt 2 DELETE
            >;

            label = "falcon";
        };

        arrows {
            bindings = <
&trans  &kp LG(Q)     &kp LG(W)     &kp LA(LG(LEFT))  &kp LA(LG(RIGHT))  &trans       &kp HOME      &kp PG_DN      &kp PG_UP  &kp END       &kp LG(PLUS)   &trans
&trans  &kp LALT      &kp LGUI      &kp LSHFT         &kp LCTRL          &trans       &kp LEFT      &kp DOWN       &kp UP     &kp RIGHT     &kp LG(N0)     &trans
&trans  &kp LC(DOWN)  &kp LC(LEFT)  &kp LC(UP)        &kp LC(RIGHT)      &trans       &kp LG(LBKT)  &trans         &trans     &kp LG(RBKT)  &kp LG(MINUS)  &trans
                                    &kp TAB           &trans             &kp ENTER    &kp SPACE     &kp BACKSPACE  &kp DEL
            >;

            label = "arrows";
        };

        numbers_and_functions {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&trans  &kp F1            &kp F2            &kp F3              &kp F4         &kp C_PLAY_PAUSE     &kp PLUS   &kp N7                &kp N8              &kp N9            &kp ASTERISK  &none
&trans  &hml LEFT_ALT F5  &hml LEFT_GUI F6  &hml LEFT_SHIFT F7  &hml LCTRL F8  &kp C_VOLUME_UP      &kp MINUS  &hmr LEFT_CONTROL N4  &hmr LEFT_SHIFT N5  &hmr LEFT_GUI N6  &kp FSLH      &none
&trans  &kp F9            &kp F10           &kp F11             &kp F12        &kp C_VOLUME_DOWN    &kp COMMA  &kp N1                &kp N2              &kp N3            &kp DOT       &none
                                            &kp TAB             &kp ESC        &trans               &kp SPACE  &kp BACKSPACE         &kp N0
            >;

            label = "fn_numbers";
        };

        symbols {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp LS(LA(N8))  &kp EXCLAMATION    &kp AT_SIGN  &kp HASH       &kp DOLLAR    &kp PERCENT             &kp CARET  &kp AMPERSAND  &kp ASTERISK            &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp BACKSPACE
&kp TILDE       &kp GRAVE          &kp SQT      &kp LS(LBRC)   &kp LS(RBRC)  &kp LS(LA(NUMBER_2))    &kp PIPE   &kp MINUS      &hmr RIGHT_SHIFT EQUAL  &kp LBKT              &kp RBKT               &trans
&trans          &kp LA(LS(SLASH))  &kp LA(N1)   &php_equalize  &php_arrow    &trans                  &n_tilde   &kp UNDER      &kp PLUS                &kp DOT               &kp BSLH               &trans
                                                &kp TAB        &kp ESCAPE    &kp ENTER               &kp SPACE  &none          &kp DEL
            >;

            label = "symbols";
        };

        shortcuts {
            bindings = <
&none  &none                   &none                   &none                   &none                   &none    &none      &none               &none               &none               &none               &none
&none  &kp LS(LA(LC(LG(N1))))  &kp LG(LA(LC(LS(N2))))  &kp LS(LA(LC(LG(N3))))  &kp LG(LA(LS(LC(N4))))  &none    &none      &kp LG(LA(LC(F1)))  &kp LA(LC(LG(F2)))  &kp LA(LG(LC(F3)))  &kp LG(LC(LA(F4)))  &none
&none  &kp LS(LA(LC(LG(N5))))  &kp LG(LA(LS(LC(N6))))  &kp LG(LA(LS(LC(N7))))  &kp LG(LA(LC(LS(N8))))  &none    &none      &kp LA(LC(LG(F5)))  &kp LG(LA(LC(F6)))  &kp LG(LC(LA(F7)))  &kp LA(LC(LG(F8)))  &none
                                                       &none                   &kp SPACE               &none    &kp SPACE  &none               &none
            >;

            label = "shortcuts";
        };

        adjust {
            bindings = <
&none  &rgb_ug RGB_TOG  &none            &ext_power EP_ON  &ext_power EP_OFF  &sys_reset    &sys_reset  &none  &none  &none  &none  &none
&none  &rgb_ug RGB_HUI  &rgb_ug RGB_BRI  &rgb_ug RGB_EFF   &rgb_ug RGB_SPI    &none         &none       &none  &none  &none  &none  &none
&none  &rgb_ug RGB_SAD  &rgb_ug RGB_BRD  &rgb_ug RGB_EFR   &rgb_ug RGB_SPD    &none         &none       &none  &none  &none  &none  &none
                                         &none             &none              &none         &none       &none  &none
            >;

            label = "adjust";
        };

        accents {
            bindings = <
&none  &none          &none  &mac_adcent E  &none  &none    &none  &mac_adcent U  &mac_adcent I  &mac_adcent O  &none  &none
&to 0  &mac_adcent A  &none  &none          &none  &none    &none  &none          &none          &none          &none  &none
&none  &none          &none  &none          &none  &none    &none  &none          &none          &none          &none  &none
                             &none          &to 0  &none    &none  &none          &none
            >;

            label = "accents";
        };
    };
};
